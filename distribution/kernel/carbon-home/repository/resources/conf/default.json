{
  "user_store.type": "database",
  "super_admin.admin_role": "admin",
  "authorization_manager": {
    "class": "org.wso2.carbon.user.core.authorization.JDBCAuthorizationManager",
    "properties": {
      "AdminRoleManagementPermissions": "/permission",
      "AuthorizationCacheEnabled": "true",
      "GetAllRolesOfUserEnabled": "false"
    }
  },
  "realm_manager": {
    "data_source": "jdbc/SHARED_DB",
    "properties": {
      "isCascadeDeleteEnabled": true
    }
  },
  "user_store.properties": {
    "ReadGroups": true,
    "UsernameJavaScriptRegEx": "[a-zA-Z0-9._\\-|//]{3,30}$",
    "UsernameJavaRegExViolationErrorMsg" : "Username pattern policy violated",
    "PasswordJavaRegEx" : "^[\\S]{5,30}$",
    "PasswordJavaScriptRegEx" : "^[\\S]{5,30}$",
    "PasswordJavaRegExViolationErrorMsg" : "Password length should be within 5 to 30 characters",
    "RolenameJavaScriptRegEx" : "^[\\S]{3,30}$",
    "MultiAttributeSeparator" : ",",
    "MaxUserNameListLength" : "100",
    "MaxRoleNameListLength" : "100"
  },
  "governance.data_source": "jdbc/SHARED_DB",
  "governance.cache_id": "$conf{database.shared_db.username}@$conf{database.shared_db.url}",
  "governance.enable_cache": true,
  "transport.http.port": "9763",
  "transport.http.redirectPort": "9443",
  "transport.http.bindOnInit": "false",
  "transport.http.maxHttpHeaderSize": "8192",
  "transport.http.acceptorThreadCount": "2",
  "transport.http.maxThreads": "250",
  "transport.http.minSpareThreads": "50",
  "transport.http.disableUploadTimeout": "false",
  "transport.http.connectionUploadTimeout": "120000",
  "transport.http.maxKeepAliveRequests": "200",
  "transport.http.acceptCount": "200",
  "transport.http.server": "WSO2 Carbon Server",
  "transport.http.compression": "on",
  "transport.http.compressionMinSize": "2048",
  "transport.http.noCompressionUserAgents": "gozilla, traviata",
  "transport.http.compressableMimeType": "text/html,text/javascript,application/x-javascript,application/javascript,application/xml,text/css,application/xslt+xml,text/xsl,image/gif,image/jpg,image/jpeg",
  "transport.http.URIEncoding": "UTF-8",
  "transport.https.port": "9443",
  "transport.https.bindOnInit": "false",
  "transport.https.sslProtocol": "TLS",
  "transport.https.sslEnabledProtocols": "TLSv1,TLSv1.1,TLSv1.2",
  "transport.https.maxHttpHeaderSize": "8192",
  "transport.https.acceptorThreadCount": "2",
  "transport.https.maxThreads": "250",
  "transport.https.minSpareThreads": "50",
  "transport.https.disableUploadTimeout": "false",
  "transport.https.enableLookups": "false",
  "transport.https.connectionUploadTimeout": "120000",
  "transport.https.maxKeepAliveRequests": "200",
  "transport.https.acceptCount": "200",
  "transport.https.server": "WSO2 Carbon Server",
  "transport.https.clientAuth": "false",
  "transport.https.compression": "on",
  "transport.https.scheme": "https",
  "transport.https.secure": "true",
  "transport.https.SSLEnabled": "true",
  "transport.https.compressionMinSize": "2048",
  "transport.https.noCompressionUserAgents": "gozilla, traviata",
  "transport.https.compressableMimeType": "text/html,text/javascript,application/x-javascript,application/javascript,application/xml,text/css,application/xslt+xml,text/xsl,image/gif,image/jpg,image/jpeg",
  "transport.https.keystoreFile": "${carbon.home}/repository/resources/security/$conf{keystore.tls.file_name}",
  "transport.https.keystorePass": "$conf{keystore.tls.password}",
  "transport.https.URIEncoding": "UTF-8",
  "message_formatters": [
    {
      "content_type": "application/x-www-form-urlencoded",
      "class": "org.apache.axis2.transport.http.XFormURLEncodedFormatter"
    },
    {
      "content_type": "multipart/form-data",
      "class": "org.apache.axis2.transport.http.MultipartFormDataFormatter"
    },
    {
      "content_type": "application/xml",
      "class": "org.apache.axis2.transport.http.ApplicationXMLFormatter"
    },
    {
      "content_type": "text/xml",
      "class": "org.apache.axis2.transport.http.SOAPMessageFormatter"
    },
    {
      "content_type": "application/soap+xml",
      "class": "org.apache.axis2.transport.http.SOAPMessageFormatter"
    },
    {
      "content_type": "application/json",
      "class": "org.apache.axis2.json.gson.JsonFormatter"
    },
    {
      "content_type": "application/json/badgerfish",
      "class": "org.apache.axis2.json.JSONBadgerfishMessageFormatter"
    },
    {
      "content_type": "text/javascript",
      "class": "org.apache.axis2.json.gson.JsonFormatter"
    }
  ],
  "message_builders": [
    {
      "content_type": "application/xml",
      "class": "org.apache.axis2.builder.ApplicationXMLBuilder"
    },
    {
      "content_type": "application/x-www-form-urlencoded",
      "class": "org.apache.axis2.builder.XFormURLEncodedBuilder"
    },
    {
      "content_type": "multipart/form-data",
      "class": "org.apache.axis2.builder.MultipartFormDataBuilder"
    },
    {
      "content_type": "application/json",
      "class": "org.apache.axis2.json.gson.JsonBuilder"
    },
    {
      "content_type": "application/json/badgerfish",
      "class": "org.apache.axis2.json.JSONBadgerfishOMBuilder"
    },
    {
      "content_type": "text/javascript",
      "class": "org.apache.axis2.json.gson.JsonBuilder"
    }
  ],
  "clustering.domain": "wso2.carbon.domain",
  "clustering.local_member_host": "$conf{deployment.local_member_ip}",
  "clustering.members": [
    "127.0.0.1:4000"
  ],
  "clustering.local_member_port": "4000",
  "database.shared_db.pool_options.maxActive": "50",
  "database.shared_db.pool_options.maxWait": "60000",
  "database.shared_db.pool_options.testOnBorrow": "true",
  "database.shared_db.pool_options.validationInterval": "30000",
  "database.shared_db.pool_options.defaultAutoCommit": "true",
  "keystore.tls.file_name": "wso2carbon.jks",
  "keystore.tls.type": "JKS",
  "keystore.tls.password": "wso2carbon",
  "keystore.tls.alias": "wso2carbon",
  "keystore.tls.key_password": "wso2carbon",
  "truststore.file_name": "client-truststore.jks",
  "truststore.type": "JKS",
  "truststore.password": "wso2carbon",
  "encryption.type": "asymmetric",
  "encryption.algorithm": "AES",
  "encryption.alias": "symmetric.key.value"
}